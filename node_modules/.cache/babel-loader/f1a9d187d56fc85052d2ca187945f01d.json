{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/locle/todo/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState } from 'react';\nconst Todo = /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n\n  const {\n    todo,\n    markCompleted,\n    getEditTodo,\n    todoEditingId,\n    editTodo,\n    index,\n    removeTodo\n  } = props;\n  const isEditing = todoEditingId === todo.id;\n  const [text, setText] = useState(todo.text);\n\n  const onEditTodo = () => {\n    editTodo({ ...todo,\n      text\n    }, index);\n    getEditTodo('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `${isEditing ? 'editing' : ''} ${todo.isCompleted ? 'completed' : ''}`,\n    children: !isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"toggle\",\n        type: \"checkbox\",\n        checked: todo.isCompleted,\n        onChange: () => markCompleted(todo.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        onDoubleClick: () => getEditTodo(todo.id),\n        children: todo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"destroy\",\n        onClick: () => removeTodo(todo.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"edit\",\n      value: text,\n      onChange: e => setText(e.target.value),\n      onBlur: onEditTodo,\n      onKeyPress: e => {\n        if (e.key === 'Enter' && text) {\n          onEditTodo();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}, \"ENxShqfBZ6umhL7W23ZWWWuTo5U=\"));\n_c2 = Todo;\nexport default Todo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Todo$memo\");\n$RefreshReg$(_c2, \"Todo\");","map":{"version":3,"sources":["/home/locle/todo/src/components/Todo.js"],"names":["React","memo","useState","Todo","props","todo","markCompleted","getEditTodo","todoEditingId","editTodo","index","removeTodo","isEditing","id","text","setText","onEditTodo","isCompleted","e","target","value","key"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,MAAMC,IAAI,gBAAGF,IAAI,SAACG,KAAK,IAAI;AAAA;;AACvB,QAAM;AACFC,IAAAA,IADE;AAEFC,IAAAA,aAFE;AAGFC,IAAAA,WAHE;AAIFC,IAAAA,aAJE;AAKFC,IAAAA,QALE;AAMFC,IAAAA,KANE;AAOFC,IAAAA;AAPE,MAQFP,KARJ;AASA,QAAMQ,SAAS,GAAGJ,aAAa,KAAKH,IAAI,CAACQ,EAAzC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAACG,IAAI,CAACS,IAAN,CAAhC;;AACA,QAAME,UAAU,GAAG,MAAM;AACrBP,IAAAA,QAAQ,CAAC,EACL,GAAGJ,IADE;AAELS,MAAAA;AAFK,KAAD,EAGLJ,KAHK,CAAR;AAIAH,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAND;;AAQA,sBACI;AAAI,IAAA,SAAS,EAAG,GAAEK,SAAS,GAAG,SAAH,GAAe,EAAG,IAAGP,IAAI,CAACY,WAAL,GAAmB,WAAnB,GAAiC,EAAG,EAApF;AAAA,cAEQ,CAACL,SAAD,gBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AACI,QAAA,SAAS,EAAC,QADd;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,OAAO,EAAEP,IAAI,CAACY,WAHlB;AAII,QAAA,QAAQ,EAAE,MAAMX,aAAa,CAACD,IAAI,CAACQ,EAAN;AAJjC;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAO,QAAA,aAAa,EAAE,MAAMN,WAAW,CAACF,IAAI,CAACQ,EAAN,CAAvC;AAAA,kBAAmDR,IAAI,CAACS;AAAxD;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAE,MAAMH,UAAU,CAACN,IAAI,CAACQ,EAAN;AAArD;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,gBAWI;AACI,MAAA,SAAS,EAAC,MADd;AAEI,MAAA,KAAK,EAAEC,IAFX;AAGI,MAAA,QAAQ,EAAGI,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAH5B;AAII,MAAA,MAAM,EAAEJ,UAJZ;AAKI,MAAA,UAAU,EAAGE,CAAD,IAAO;AACf,YAAIA,CAAC,CAACG,GAAF,KAAU,OAAV,IAAqBP,IAAzB,EAA+B;AAC3BE,UAAAA,UAAU;AACb;AACJ;AATL;AAAA;AAAA;AAAA;AAAA;AAbZ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CAhDgB,kCAAjB;MAAMb,I;AAkDN,eAAeA,IAAf","sourcesContent":["import React, { memo, useState } from 'react'\n\nconst Todo = memo(props => {\n    const {\n        todo,\n        markCompleted,\n        getEditTodo,\n        todoEditingId,\n        editTodo,\n        index,\n        removeTodo\n    } = props\n    const isEditing = todoEditingId === todo.id\n    const [text, setText] = useState(todo.text)\n    const onEditTodo = () => {\n        editTodo({\n            ...todo,\n            text\n        }, index)\n        getEditTodo('')\n    }\n\n    return (\n        <li className={`${isEditing ? 'editing' : ''} ${todo.isCompleted ? 'completed' : ''}`}>\n            {\n                !isEditing ?\n                    <div className=\"view\">\n                        <input\n                            className=\"toggle\"\n                            type=\"checkbox\"\n                            checked={todo.isCompleted}\n                            onChange={() => markCompleted(todo.id)}\n                        />\n                        <label onDoubleClick={() => getEditTodo(todo.id)}>{todo.text}</label>\n                        <button className=\"destroy\" onClick={() => removeTodo(todo.id)} />\n                    </div> :\n                    <input\n                        className=\"edit\"\n                        value={text}\n                        onChange={(e) => setText(e.target.value)}\n                        onBlur={onEditTodo}\n                        onKeyPress={(e) => {\n                            if (e.key === 'Enter' && text) {\n                                onEditTodo()\n                            }\n                        }}\n                    />\n            }\n        </li>\n    )\n})\n\nexport default Todo"]},"metadata":{},"sourceType":"module"}