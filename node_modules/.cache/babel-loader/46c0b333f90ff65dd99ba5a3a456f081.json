{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/locle/todo/src/App.js\";\nimport React, { PureComponent } from 'react';\nimport TodoList from './components/TodoList';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport './css/Todo.css';\n\nconst filterByStatus = (listTodos = [], status = '', id) => {\n  switch (status) {\n    case 'ACTIVE':\n      return listTodos.filter(item => !item.isCompleted);\n\n    case 'COMPLETED':\n      return listTodos.filter(item => item.isCompleted);\n\n    case 'REMOVE':\n      return listTodos.filter(item => item.id !== id);\n\n    default:\n      return listTodos;\n  }\n};\n\nconst filterTodosLeft = (listTodos = []) => {\n  return listTodos.filter(item => !item.isCompleted);\n};\n\nclass App extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listTodos: [],\n      isCheckedAll: false,\n      status: 'ALL',\n      todoEditingId: ''\n    };\n\n    this.addTodos = (todo = {}) => {\n      this.setState(preState => ({\n        listTodos: [...preState.listTodos, todo]\n      }));\n    };\n\n    this.markCompleted = (id = '') => {\n      const {\n        listTodos\n      } = this.state;\n      let isCheckedAll = true;\n      const updatedListTodos = listTodos.map(item => {\n        if (!item.isCompleted && item.id !== id || item.isCompleted && item.id === id) {\n          isCheckedAll = false;\n        }\n\n        if (item.id === id) {\n          return { ...item,\n            isCompleted: !item.isCompleted\n          };\n        }\n\n        return item;\n      });\n      this.setState({\n        isCheckedAll,\n        listTodos: updatedListTodos\n      });\n    };\n\n    this.checkAll = () => {\n      const {\n        listTodos,\n        isCheckedAll\n      } = this.state;\n      const updatedListTodos = listTodos.map(item => ({ ...item,\n        isCompleted: !isCheckedAll\n      }));\n      this.setState(preState => ({\n        isCheckedAll: !preState.isCheckedAll,\n        listTodos: updatedListTodos\n      }));\n    };\n\n    this.clearCompleted = () => {\n      this.setState(preState => ({\n        listTodos: filterTodosLeft(preState.listTodos)\n      }));\n    };\n\n    this.getEditTodo = (id = '') => {\n      this.setState({\n        todoEditingId: id\n      });\n    };\n\n    this.editTodo = (todo, index) => {\n      const {\n        listTodos\n      } = this.state;\n      listTodos.splice(index, 1, todo);\n      this.setState({\n        listTodos\n      });\n    };\n\n    this.removeTodo = (id = '') => {\n      this.setState(prevState => ({\n        listTodos: filterByStatus(prevState.listTodos, 'REMOVE', id)\n      }));\n    };\n  }\n\n  render() {\n    const {\n      listTodos,\n      isCheckedAll,\n      status,\n      todoEditingId\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        addTodo: this.addTodos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        listTodos: filterByStatus(listTodos, status),\n        markCompleted: this.markCompleted,\n        checkAll: this.checkAll,\n        isCheckedAll: isCheckedAll,\n        todoEditingId: todoEditingId,\n        getEditTodo: this.getEditTodo,\n        editTodo: this.editTodo,\n        removeTodo: this.removeTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        activeButton: status,\n        setStatusFilter: status => this.setState({\n          status\n        }),\n        clearCompleted: this.clearCompleted,\n        numOfTodosLeft: filterTodosLeft(listTodos).length,\n        numOfTodos: listTodos.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/locle/todo/src/App.js"],"names":["React","PureComponent","TodoList","Header","Footer","filterByStatus","listTodos","status","id","filter","item","isCompleted","filterTodosLeft","App","state","isCheckedAll","todoEditingId","addTodos","todo","setState","preState","markCompleted","updatedListTodos","map","checkAll","clearCompleted","getEditTodo","editTodo","index","splice","removeTodo","prevState","render","length"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport TodoList from './components/TodoList'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nimport './css/Todo.css'\n\nconst filterByStatus = (listTodos = [], status = '', id) => {\n  switch (status) {\n    case 'ACTIVE':\n      return listTodos.filter(item => !item.isCompleted)\n    case 'COMPLETED':\n      return listTodos.filter(item => item.isCompleted)\n    case 'REMOVE':\n      return listTodos.filter(item => item.id !== id)\n    default:\n      return listTodos\n  }\n}\n\nconst filterTodosLeft = (listTodos = []) => {\n  return listTodos.filter(item => !item.isCompleted)\n}\n\nclass App extends PureComponent {\n  state = {\n    listTodos: [],\n    isCheckedAll: false,\n    status: 'ALL',\n    todoEditingId: ''\n  }\n\n  addTodos = (todo = {}) => {\n    this.setState(preState => ({\n      listTodos: [...preState.listTodos, todo]\n    }))\n  }\n\n  markCompleted = (id = '') => {\n    const { listTodos } = this.state\n    let isCheckedAll = true\n    const updatedListTodos = listTodos.map(item => {\n      if ((!item.isCompleted && item.id !== id) || (item.isCompleted && item.id === id)) {\n        isCheckedAll = false\n      }\n      if (item.id === id) {\n        return { ...item, isCompleted: !item.isCompleted }\n      }\n      return item\n    })\n    this.setState({\n      isCheckedAll,\n      listTodos: updatedListTodos\n    })\n  }\n\n  checkAll = () => {\n    const { listTodos, isCheckedAll } = this.state\n    const updatedListTodos = listTodos.map(item => ({ ...item, isCompleted: !isCheckedAll }))\n    this.setState(preState => ({\n      isCheckedAll: !preState.isCheckedAll,\n      listTodos: updatedListTodos\n    }))\n  }\n\n  clearCompleted = () => {\n    this.setState(preState => ({\n      listTodos: filterTodosLeft(preState.listTodos)\n    }))\n  }\n\n  getEditTodo = (id = '') => {\n    this.setState({\n      todoEditingId: id\n    })\n  }\n\n  editTodo = (todo, index) => {\n    const { listTodos } = this.state\n    listTodos.splice(index, 1, todo)\n    this.setState({ listTodos })\n  }\n\n  removeTodo = (id = '') => {\n    this.setState(prevState => ({\n      listTodos: filterByStatus(prevState.listTodos, 'REMOVE', id)\n    }))\n  }\n\n  render() {\n    const { listTodos, isCheckedAll, status, todoEditingId } = this.state\n    return (\n      <div className=\"todoapp\">\n        <Header\n          addTodo={this.addTodos}\n        />\n        <TodoList\n          listTodos={filterByStatus(listTodos, status)}\n          markCompleted={this.markCompleted}\n          checkAll={this.checkAll}\n          isCheckedAll={isCheckedAll}\n          todoEditingId={todoEditingId}\n          getEditTodo={this.getEditTodo}\n          editTodo={this.editTodo}\n          removeTodo={this.removeTodo}\n        />\n        <Footer\n          activeButton={status}\n          setStatusFilter={(status) => this.setState({ status })}\n          clearCompleted={this.clearCompleted}\n          numOfTodosLeft={filterTodosLeft(listTodos).length}\n          numOfTodos={listTodos.length}\n        />\n      </div>\n    );\n\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}